<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false" />
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="debug" default="false" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find clcbs_gazebo)/models" />
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find clcbs_gazebo)/worlds/clcbs.world" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
  </include>
  <include file="$(find clcbs_gazebo)/launch/clcbs_config.launch" />

  <!-- 
  <arg name="map_file" default="$(find clcbs_gazebo)/models/agent/config/map_50by50_obst25_agents5_ex37.yaml" />
  <group ns="config">
    <rosparam file="$(arg map_file)" command="load" />
  </group>

  <arg name="ns_1" value="agent1" />
  <arg name="ns_2" value="agent2" />
  <arg name="ns_3" value="agent3" />
  <arg name="ns_4" value="agent4" />
  <arg name="ns_5" value="agent5" />

  <arg name="robot_description" default="$(find clcbs_gazebo)/models/agent/urdf/agent_sim.xacro" />
  <param name="/robot_description" command="$(find xacro)/xacro $(arg robot_description)" />


  <group ns="$(arg ns_1)">
    <rosparam file="$(find clcbs_gazebo)/models/agent/config/gazebo_controller.yaml" command="load" />
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg ns_1) -param /robot_description -x 10 -y 14" />
    <node pkg="clcbs_gazebo" type="robot_tf.py" name="robot_base_tf_publisher" args="-r $(arg ns_1) -l robot_base" />
    <node name="controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller left_wheel_controller right_wheel_controller" />
  </group>

  <group ns="$(arg ns_2)">
    <rosparam file="$(find clcbs_gazebo)/models/agent/config/gazebo_controller.yaml" command="load" />
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg ns_2) -param /robot_description -x 5 -y 14" />
    <node pkg="clcbs_gazebo" type="robot_tf.py" name="robot_base_tf_publisher" args="-r $(arg ns_2) -l robot_base" />
    <node name="controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller left_wheel_controller right_wheel_controller" />
  </group>

  <group ns="$(arg ns_3)">
    <rosparam file="$(find clcbs_gazebo)/models/agent/config/gazebo_controller.yaml" command="load" />
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg ns_3) -param /robot_description -x 0 -y 14" />
    <node pkg="clcbs_gazebo" type="robot_tf.py" name="robot_base_tf_publisher" args="-r $(arg ns_3) -l robot_base" />
    <node name="controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller left_wheel_controller right_wheel_controller" />
  </group>

  <group ns="$(arg ns_4)">
    <rosparam file="$(find clcbs_gazebo)/models/agent/config/gazebo_controller.yaml" command="load" />
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg ns_4) -param /robot_description -x -5 -y 14" />
    <node pkg="clcbs_gazebo" type="robot_tf.py" name="robot_base_tf_publisher" args="-r $(arg ns_4) -l robot_base" />
    <node name="controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller left_wheel_controller right_wheel_controller" />
  </group>

  <group ns="$(arg ns_5)">
    <rosparam file="$(find clcbs_gazebo)/models/agent/config/gazebo_controller.yaml" command="load" />
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg ns_5) -param /robot_description -x -10 -y 14" />
    <node pkg="clcbs_gazebo" type="robot_tf.py" name="robot_base_tf_publisher" args="-r $(arg ns_5) -l robot_base" />
    <node name="controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller left_wheel_controller right_wheel_controller" />
  </group> -->

  <!-- <include file="$(find clcbs_gazebo)/launch/clcbs_world_rviz.launch" /> -->

  <!-- <node pkg="clcbs_gazebo" type="keyboard_velocity.py" name="keyboard_terminal" output="screen" launch-prefix="xterm -e" /> -->

  <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/agent_control" args="joint_state_controller agent_leftwheel_controller agent_rightwheel_controller"/> -->
  <!-- <node name="VelocityObserver" pkg="clcbs_gazebo" type="VelocityObserver.py" launch-prefix="xterm -e"/> -->

</launch>
